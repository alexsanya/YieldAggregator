/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  Aggregator,
  AggregatorInterface,
} from "../../contracts/Aggregator";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum Aggregator.Market",
        name: "market",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum Aggregator.Market",
        name: "from",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "enum Aggregator.Market",
        name: "to",
        type: "uint8",
      },
    ],
    name: "Rebalance",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum Aggregator.Market",
        name: "market",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [],
    name: "AAVE_A_WETH_MAINNET_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "AAVE_V3_MAINNET_POOL_ADDRESS_PROVIDER_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "COMPOUND_V3_PROXY_MAINNET_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WETH_MAINNET_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum Aggregator.Market",
        name: "_market",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "weth_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "fundsDepositedInto",
    outputs: [
      {
        internalType: "enum Aggregator.Protocol",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rebalance",
    outputs: [
      {
        internalType: "enum Aggregator.Market",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e06040526002600060146101000a81548160ff0219169083600281111561002a57610029610201565b5b021790555034801561003b57600080fd5b5061005861004d61013560201b60201c565b61013d60201b60201c565b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050734d5f47fa6a74757f35c14fd3a6ef8e3c9bc514e873ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff168152505073a17581a9e3356d9a858b789d68b4d866e593ae9473ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff1681525050610230565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60805160a05160c0516117fc620002bb6000396000818161086b015281816108c801528181610ee80152610f6b01526000610a5d0152600081816102eb01528181610404015281816106c9015281816108a7015281816109b101528181610b3801528181610bdd01528181610d4d01528181610e0801528181610eac0152610fa701526117fc6000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80637d7c2a1c116100715780637d7c2a1c146101305780638da5cb5b1461014e578063a4b1f5e41461016c578063bff0c0fc1461018a578063f2fde38b146101a8578063f4d4c9d7146101c4576100a9565b80630ffd2343146100ae57806329f053d1146100cc57806333bba7ed146100ea5780633ccfd60b14610108578063715018a614610126575b600080fd5b6100b66101e0565b6040516100c3919061111c565b60405180910390f35b6100d46101f8565b6040516100e191906111ae565b60405180910390f35b6100f261020b565b6040516100ff919061111c565b60405180910390f35b610110610223565b60405161011d91906111e2565b60405180910390f35b61012e61050e565b005b610138610522565b6040516101459190611245565b60405180910390f35b61015661056e565b604051610163919061111c565b60405180910390f35b610174610597565b604051610181919061111c565b60405180910390f35b6101926105af565b60405161019f919061111c565b60405180910390f35b6101c260048036038101906101bd9190611291565b6105c7565b005b6101de60048036038101906101d9919061130f565b61064a565b005b73a17581a9e3356d9a858b789d68b4d866e593ae9481565b600060149054906101000a900460ff1681565b732f39d218133afab8f2b819b1066c7e434ad94e9e81565b600061022d6107e9565b6002808111156102405761023f611137565b5b600060149054906101000a900460ff16600281111561026257610261611137565b5b036102a2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610299906113ac565b60405180910390fd5b600160028111156102b6576102b5611137565b5b600060149054906101000a900460ff1660028111156102d8576102d7611137565b5b036103f65760006102e7610867565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016103449291906113cc565b6020604051808303816000875af1158015610363573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610387919061142d565b506002600060146101000a81548160ff021916908360028111156103ae576103ad611137565b5b02179055507f08eeb3fbbcf9438aa9fd119952d5f42176050799525cdfc56f3793bb84bf35036001826040516103e592919061145a565b60405180910390a18091505061050b565b6000610400610a4e565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161045d9291906113cc565b6020604051808303816000875af115801561047c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a0919061142d565b506002600060146101000a81548160ff021916908360028111156104c7576104c6611137565b5b02179055507f08eeb3fbbcf9438aa9fd119952d5f42176050799525cdfc56f3793bb84bf35036000826040516104fe92919061145a565b60405180910390a1809150505b90565b6105166107e9565b6105206000610c7b565b565b600061052c6107e9565b7f3bf67ba50d14ef324f957808f6b00a77c3c857c9d41422fd2ab8dd6c3710327c6001600060405161055f929190611483565b60405180910390a16000905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b734d5f47fa6a74757f35c14fd3a6ef8e3c9bc514e881565b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281565b6105cf6107e9565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361063e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106359061151e565b60405180910390fd5b61064781610c7b565b50565b6106526107e9565b60028081111561066557610664611137565b5b600060149054906101000a900460ff16600281111561068757610686611137565b5b146106c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106be906115b0565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610724939291906115d0565b6020604051808303816000875af1158015610743573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610767919061142d565b506000600281111561077c5761077b611137565b5b82600281111561078f5761078e611137565b5b036107a25761079d81610d3f565b6107ac565b6107ab81610eaa565b5b7f1d6bb4e583d7da423b02deed80468e06912cf1211d817d091ddddb7c63492e6082826040516107dd92919061145a565b60405180910390a15050565b6107f1611044565b73ffffffffffffffffffffffffffffffffffffffff1661080f61056e565b73ffffffffffffffffffffffffffffffffffffffff1614610865576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085c90611653565b60405180910390fd5b565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663f3fef3a37f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161091f919061111c565b602060405180830381865afa15801561093c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109609190611688565b6040518363ffffffff1660e01b815260040161097d9291906113cc565b600060405180830381600087803b15801561099757600080fd5b505af11580156109ab573d6000803e3d6000fd5b505050507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610a08919061111c565b602060405180830381865afa158015610a25573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a499190611688565b905090565b600080610a5961104c565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663095ea7b3827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b8152600401610ad69291906113cc565b6020604051808303816000875af1158015610af5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b19919061142d565b508073ffffffffffffffffffffffffffffffffffffffff166369328dec7f00000000000000000000000000000000000000000000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff306040518463ffffffff1660e01b8152600401610b97939291906116b5565b6020604051808303816000875af1158015610bb6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bda9190611688565b507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610c34919061111c565b602060405180830381865afa158015610c51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c759190611688565b91505090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000610d4961104c565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663095ea7b382846040518363ffffffff1660e01b8152600401610da69291906113cc565b6020604051808303816000875af1158015610dc5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de9919061142d565b508073ffffffffffffffffffffffffffffffffffffffff1663617ba0377f0000000000000000000000000000000000000000000000000000000000000000843060006040518563ffffffff1660e01b8152600401610e4a949392919061173f565b600060405180830381600087803b158015610e6457600080fd5b505af1158015610e78573d6000803e3d6000fd5b5050505060008060146101000a81548160ff02191690836002811115610ea157610ea0611137565b5b02179055505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663095ea7b37f0000000000000000000000000000000000000000000000000000000000000000836040518363ffffffff1660e01b8152600401610f259291906113cc565b6020604051808303816000875af1158015610f44573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f68919061142d565b507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663f2b9fdb87f0000000000000000000000000000000000000000000000000000000000000000836040518363ffffffff1660e01b8152600401610fe49291906113cc565b600060405180830381600087803b158015610ffe57600080fd5b505af1158015611012573d6000803e3d6000fd5b505050506001600060146101000a81548160ff0219169083600281111561103c5761103b611137565b5b021790555050565b600033905090565b600080732f39d218133afab8f2b819b1066c7e434ad94e9e73ffffffffffffffffffffffffffffffffffffffff1663026b1d5f6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156110ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110d29190611799565b90508091505090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611106826110db565b9050919050565b611116816110fb565b82525050565b6000602082019050611131600083018461110d565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6003811061117757611176611137565b5b50565b600081905061118882611166565b919050565b60006111988261117a565b9050919050565b6111a88161118d565b82525050565b60006020820190506111c3600083018461119f565b92915050565b6000819050919050565b6111dc816111c9565b82525050565b60006020820190506111f760008301846111d3565b92915050565b6003811061120e5761120d611137565b5b50565b600081905061121f826111fd565b919050565b600061122f82611211565b9050919050565b61123f81611224565b82525050565b600060208201905061125a6000830184611236565b92915050565b600080fd5b61126e816110fb565b811461127957600080fd5b50565b60008135905061128b81611265565b92915050565b6000602082840312156112a7576112a6611260565b5b60006112b58482850161127c565b91505092915050565b600381106112cb57600080fd5b50565b6000813590506112dd816112be565b92915050565b6112ec816111c9565b81146112f757600080fd5b50565b600081359050611309816112e3565b92915050565b6000806040838503121561132657611325611260565b5b6000611334858286016112ce565b9250506020611345858286016112fa565b9150509250929050565b600082825260208201905092915050565b7f4e6f7468696e6720746f20776974686472617700000000000000000000000000600082015250565b600061139660138361134f565b91506113a182611360565b602082019050919050565b600060208201905081810360008301526113c581611389565b9050919050565b60006040820190506113e1600083018561110d565b6113ee60208301846111d3565b9392505050565b60008115159050919050565b61140a816113f5565b811461141557600080fd5b50565b60008151905061142781611401565b92915050565b60006020828403121561144357611442611260565b5b600061145184828501611418565b91505092915050565b600060408201905061146f6000830185611236565b61147c60208301846111d3565b9392505050565b60006040820190506114986000830185611236565b6114a56020830184611236565b9392505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061150860268361134f565b9150611513826114ac565b604082019050919050565b60006020820190508181036000830152611537816114fb565b9050919050565b7f596f752073686f756c64207769746864726177206265666f72652072652d646560008201527f706f736974000000000000000000000000000000000000000000000000000000602082015250565b600061159a60258361134f565b91506115a58261153e565b604082019050919050565b600060208201905081810360008301526115c98161158d565b9050919050565b60006060820190506115e5600083018661110d565b6115f2602083018561110d565b6115ff60408301846111d3565b949350505050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061163d60208361134f565b915061164882611607565b602082019050919050565b6000602082019050818103600083015261166c81611630565b9050919050565b600081519050611682816112e3565b92915050565b60006020828403121561169e5761169d611260565b5b60006116ac84828501611673565b91505092915050565b60006060820190506116ca600083018661110d565b6116d760208301856111d3565b6116e4604083018461110d565b949350505050565b6000819050919050565b600061ffff82169050919050565b6000819050919050565b600061172961172461171f846116ec565b611704565b6116f6565b9050919050565b6117398161170e565b82525050565b6000608082019050611754600083018761110d565b61176160208301866111d3565b61176e604083018561110d565b61177b6060830184611730565b95945050505050565b60008151905061179381611265565b92915050565b6000602082840312156117af576117ae611260565b5b60006117bd84828501611784565b9150509291505056fea264697066735822122053c799c827fd254b702af70a60bee7f4648b60f198db19f8ca4b51c5570ba36d64736f6c63430008120033";

type AggregatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AggregatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Aggregator__factory extends ContractFactory {
  constructor(...args: AggregatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Aggregator> {
    return super.deploy(overrides || {}) as Promise<Aggregator>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Aggregator {
    return super.attach(address) as Aggregator;
  }
  override connect(signer: Signer): Aggregator__factory {
    return super.connect(signer) as Aggregator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AggregatorInterface {
    return new utils.Interface(_abi) as AggregatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Aggregator {
    return new Contract(address, _abi, signerOrProvider) as Aggregator;
  }
}
