/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Aggregator, AggregatorInterface } from "../Aggregator";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "Rebalance",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "weth_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rebalance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506102b8806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80633ccfd60b146100465780637d7c2a1c14610064578063b6b55f2514610082575b600080fd5b61004e61009e565b60405161005b9190610184565b60405180910390f35b61006c6100e3565b60405161007991906101e0565b60405180910390f35b61009c6004803603810190610097919061022c565b610131565b005b600080607b90507f4e70a604b23a8edee2b1d0a656e9b9c00b73ad8bb1afc2c59381ee9f69197de7816040516100d49190610184565b60405180910390a18091505090565b600080600190506000600290507f6dcf4e69cd04d9def52d660ea37a5b366adb7701505e48e75c03d6a51a343f648282604051610121929190610259565b60405180910390a1809250505090565b7f4d6ce1e535dbade1c23defba91e23b8f791ce5edc0cc320257a2b364e4e38426816040516101609190610184565b60405180910390a150565b6000819050919050565b61017e8161016b565b82525050565b60006020820190506101996000830184610175565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101ca8261019f565b9050919050565b6101da816101bf565b82525050565b60006020820190506101f560008301846101d1565b92915050565b600080fd5b6102098161016b565b811461021457600080fd5b50565b60008135905061022681610200565b92915050565b600060208284031215610242576102416101fb565b5b600061025084828501610217565b91505092915050565b600060408201905061026e60008301856101d1565b61027b60208301846101d1565b939250505056fea264697066735822122092db6090448355f6d56ea794f201ddeab6e75c2cca3e088b014719554a0ef3f964736f6c63430008120033";

type AggregatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AggregatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Aggregator__factory extends ContractFactory {
  constructor(...args: AggregatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Aggregator> {
    return super.deploy(overrides || {}) as Promise<Aggregator>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Aggregator {
    return super.attach(address) as Aggregator;
  }
  override connect(signer: Signer): Aggregator__factory {
    return super.connect(signer) as Aggregator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AggregatorInterface {
    return new utils.Interface(_abi) as AggregatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Aggregator {
    return new Contract(address, _abi, signerOrProvider) as Aggregator;
  }
}
